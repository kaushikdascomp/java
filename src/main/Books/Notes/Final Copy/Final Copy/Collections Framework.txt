Hashmap- It is like an arraylist/stack where we can store our values using the key
syntax Hashmap<K,value>

//Create new HashMap
HashMap newMap=new HashMap();
//Populate Hashmap
newMap.put(1,"All is well");
newMap.put(2,"Good");
//Get value of HashMap
String val=(String) newMap.get(2);
sysout.println(+val)

Diff-Hashtable is synchronized whereas hashmap is not and makes hashmap better for non-threaded applications

Hashtable does not allow null keys or values whereas hashmap allows one null key and any number of null values
For single threaded applications hashmap is faster

Diff between Iterator and enumerator-

enumerator is much faster and consumes less memory than iterator but iterator is much safer as it denies other threads to modify
the collection object

Enumerator is readonly as it does not have remove() method to remove objects but iterator has remove() method

Iterator makes no guarantee about the order of iteration however listiterator does provide an add operation as it provides guarantee of 
order of iteration
Iterator used for set and lists whereas list iterator only for lists
Iterator can traverse in forward direction only whereas listitertor in both direction 
Listiterator inherits from interator interface and comes with extra functionality like adding an interface. It can modify the list during iteration

Collections Framework Interface-Queue, Dequeue,sortedmap,sortedset,Iterator, Listiterator

Iterator fail-fast property-It checks for any modifications in the list while iterating the next element. If any modification, it throws 
concurrentModificationException
Fail-safe- doesn't check for modifications while iterating the list and doesn't throw concurrentModifiction error
 
HashMap uses hashing algo using hashcode() and equals() method in get and put. When we use put method by passing key-value pair, hashmap uses
key hashcode with hashing to find out the index of key-value pair which is stored in linked list. If already the loc exists, it uses equals method
to check if the value is same, if not same it will replace the existing one

Hashmap and Treemap-For inserting,deleting and locating elements, hashmap is used. However if we want to traverse the keys in a sorted order
Treemap is used. First insert,delete and do all modifications using hashmap, then convert it to treemap for faster traversal

ArrayList and Vector-Vector is synchronized while arraylist is not, arraylist is faster than vector because it doesn't have any overhead because
of synchronization

Set is a collection that cannot contain duplicate elements

Map-Treemap, Hashtable,Hashmap,LinkedHashmap
Set-Treeset,LinkedHashset,Hashset
List-Arraylist,Linkedlist, vector 
Hashcode is used to give a unique identity to each object in the heap which makes searching faster as compared to arraylist wherein it searches each and every element

NavigableSet extends sortedSet and supports the retrieval of elements based on the closest match to a given key or keys. It's similar to NavigableMap

Queue-poll() and remove()-Poll throws null if queue is empty while remove throws exception/ Peek and element-peek throws null while retrieval
when queue is empty while element throws error
