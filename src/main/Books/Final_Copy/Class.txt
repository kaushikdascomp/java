Diff between static nested class and non-static nested class/Inner Class:

Non-static nested class also called as inner class
Nested static class doesn't require reference of outer class but non-static nested class/inner class require reference of Outer class
 If you provide the reference to non-static nested class/inner class then you can access all static/non-static methods of Outer class
But a static nested class can access only the static methods of Outer class

An instance of Inner class cannot be created without an instance of outer class and an inner class can reference data and methods defined
in outer class

http://www.geeksforgeeks.org/static-class-in-java/

Arrays:
Comaparing two arrays:
arr1[]={1,2,3}, arr2[]={1,2,3} if(arr1==arr2)/(arr1.equals(arr2)) result is not same bcoz these two are references to two diff objects and two reference
variables are compared which are not same

use arrays.equals(arr1,arr2) method to compare two method/or else use a for loop while iterating each and every element and comparing one by one

Overload and Override Advanced:
We can overload static methods in Java.eg public static void foo(){ and public static void foo(int a){
So when the function is called accordingly passing the parameters, it will show the result accordingly

But we cannot overload two or more static methods which differ only by name static

We cannot override static methods in Java as we cannot override a static method, so if a sub class is overriding a static method from super class
it will call the method in super class only as overriding is not allowed

But if static keyword is not present then it can be overriden in the base class
You can overrride same methods from super class (static/non static). If super class is having static keyword and base class no static but method name
same then it causes compile time error

http://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/

Benefits of Using Nested class:

It enhances encapsulation as the inner class can access all private members of the outer class and the inner class remains hidden from the outer
world
If a class is useful to only one class it makes sense to keep it nested and together. Better packaging

Static and final keyword serves almost the same cause while overriding a method

Non-static final variable can be initialized either in constructor or with declaration but static final variable cannot be assigned value in constructor,
they must be initialized while declaring

An inner class can access private members of outer class by extending the outer class

http://www.geeksforgeeks.org/can-override-private-methods-java/

When we access a private member by creating an instance of an object. It refers to the super class while accessing it and would show a compile time error

